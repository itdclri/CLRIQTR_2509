@model CLRIQTR.Models.EmpMastTest
@{
    ViewBag.Title = "Edit Employee";
}

<style>
    fieldset.scheduler-border {
        border: 1px groove #ddd !important;
        padding: 0 1.4em 1.4em 1.4em !important;
        margin: 0 0 1.5em 0 !important;
        -webkit-box-shadow: 0px 0px 0px 0px #000;
        box-shadow: 0px 0px 0px 0px #000;
    }

    legend.scheduler-border {
        font-size: 1.2em !important;
        font-weight: bold !important;
        text-align: left !important;
        width: auto;
        padding: 0 10px;
        border-bottom: none;
    }
</style>

<h2 class="text-center">Edit Employee - @Model.EmpNo</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.EmpNo)

    <div class="form-horizontal">
        <!-- Emp Name -->
        <div class="form-group">
            @Html.Label("Employee Name", new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.EmpName, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.EmpName)
            </div>
        </div>


        <!-- Lab Code -->
        <div class="form-group">
            @Html.Label("Lab", new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.LabCode, (SelectList)ViewBag.Labs, "-- Select Lab --", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.LabCode)
            </div>
        </div>

        <!-- Designation -->
        <div class="form-group">
            @Html.Label("Designation", new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.Designation, (SelectList)ViewBag.Designations, "-- Select Designation --", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Designation)
            </div>
        </div>

        <!-- Gender -->
        <div class="form-group">
            @Html.LabelFor(m => m.Gender, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.Gender, (SelectList)ViewBag.GenderList, "-- Select Gender --", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Gender)
            </div>
        </div>

        <!-- Pay Level -->
        <div class="form-group">
            @Html.Label("Pay Level", new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.PayLvl, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PayLvl)
            </div>
        </div>

        <!-- DOB -->
        <div class="form-group">
            @Html.Label("Date of Birth", new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.DOB_dt, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.DOB_dt)
            </div>
        </div>

        <!-- DOJ -->
        <div class="form-group">
            @Html.Label("Date of Joining", new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.DOJ_dt, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.DOJ_dt)
            </div>
        </div>

        <!-- Basic Pay -->
        <div class="form-group">
            @Html.Label("BasicPay", new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.BasicPay, new { @class = "form-control", type = "number", min = "0" })
                @Html.ValidationMessageFor(m => m.BasicPay)
            </div>
        </div>

        <!-- Category -->
        <div class="form-group">
            @Html.LabelFor(m => m.Category, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.Category, new SelectList(new[] { "GEN", "SC", "ST", "OBC" }), "-- Select Category --", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Category)
            </div>
        </div>

        <!-- DOP -->
        <div class="form-group">
            @Html.Label("Date of Present Post", new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.DOP_dt, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.DOP_dt)
            </div>
        </div>

        <!-- DOR -->
        <div class="form-group">
            @Html.Label("Date of Superannuation", new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.DOR_dt, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control", id = "DOR_dt" })
                @Html.ValidationMessageFor(m => m.DOR_dt)
                <span id="dor-error" class="text-danger" style="display:none;">Date of Superannuation is Required when Status is Changed.</span>
            </div>

        </div>


        <!-- Email -->
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @type = "email" })
                @Html.ValidationMessageFor(m => m.Email)
            </div>
        </div>

        <!-- Active Status -->
        <div class="form-group">
            @Html.Label("Active Status", new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.Active, (SelectList)ViewBag.ActiveList, "-- Select Status --", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Active)
            </div>
        </div>

        <!-- Physically Handicapped -->
        <div class="form-group">
            @Html.Label("Physically Handicapped", new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.Phy, (SelectList)ViewBag.PhyList, "-- Select --", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Phy)
            </div>
        </div>

        <!-- Mobile Number -->
        <div class="form-group">
            @Html.Label("Mobile Number", new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.MobileNumber, new { @class = "form-control", @type = "tel" })
                @Html.ValidationMessageFor(m => m.MobileNumber)
            </div>
        </div>

        <!-- Entered Date (Readonly) -->
        @*<div class="form-group">
                @Html.LabelFor(m => m.EnteredDate, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.EnteredDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @readonly = "readonly", @type = "date" })
                </div>
            </div>*@

        <!-- Entered IP (Readonly) -->
        @*<div class="form-group">
                @Html.LabelFor(m => m.EnteredIP, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.EnteredIP, new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>*@


    </div>

    <fieldset class="scheduler-border">
        <br />
        <legend class="scheduler-border">Family Details</legend>
        <br />

        <div id="dependentsContainer">
            @if (Model.Dependents != null)
            {
                for (int i = 0; i < Model.Dependents.Count; i++)
                {
                    <div class="row dependent-row" style="margin-bottom: 10px; display: flex; align-items: center;">
                        <div class="col-md-5">
                            @Html.DropDownListFor(m => m.Dependents[i].DependentTypeId, (SelectList)ViewBag.DependentTypes, "-- Select Type --", new { @class = "form-control dependent-type-dropdown" })
                        </div>
                        <div class="col-md-5">
                            @Html.TextBoxFor(m => m.Dependents[i].Name, new { @class = "form-control", placeholder = "Enter Dependent's Name" })
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-sm btn-danger remove-dependent-btn">
                                <i class="fa fa-trash"></i> Remove
                            </button>
                        </div>
                    </div>
                }
            }
        </div>

        <div class="row" style="margin-top:15px;">
            <div class="col-md-12">
                <button type="button" id="addDependentBtn" class="btn btn-sm btn-success">
                    <i class="fa fa-plus"></i> Add Dependent
                </button>
            </div>
        </div>
    </fieldset>

    <div id="dependentTemplate" style="display: none;">
        <div class="row dependent-row" style="margin-bottom: 10px; display: flex; align-items: center;">
            <div class="col-md-5">
                <select class="form-control dependent-type-dropdown">
                    <option value="">-- Select Type --</option>
                </select>
            </div>
            <div class="col-md-5">
                <input type="text" class="form-control" placeholder="Enter Dependent's Name" />
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-sm btn-danger remove-dependent-btn">
                    <i class="fa fa-trash"></i> Remove
                </button>
            </div>
        </div>
    </div>



    <!-- Submit Button -->
    <div class="form-group create-center-button">
        <input type="submit" value="Update" class="btn btn-primary" />
        @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default" })
    </div>


}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            // Client-side date validation
            $('#DOJ_dt').change(function () {
                var dob = new Date($('#DOB_dt').val());
                var doj = new Date($('#DOJ_dt').val());

                if (dob && doj && doj < dob) {
                    alert('Date of Joining cannot be before Date of Birth');
                    $('#DOJ_dt').val('');
                }
            });

            $('#DOR_dt').change(function () {
                var doj = new Date($('#DOJ_dt').val());
                var dor = new Date($('#DOR_dt').val());

                if (doj && dor && dor < doj) {
                    alert('Date of Superannuation cannot be before Date of Joining');
                    $('#DOR_dt').val('');
                }
            });

            var activeChanged = false;

            $('#Active').change(function () {
                activeChanged = true;
                $('#DOR_dt').val('');
                $('#dor-error').hide(); // hide error when changing active
            });

            $('form').submit(function (e) {
                if (activeChanged) {
                    var dor = $('#DOR_dt').val();
                    if (!dor) {
                        e.preventDefault();
                        $('#dor-error').show();
                        $('#DOR_dt').focus();
                        return false;
                    } else {
                        $('#dor-error').hide();
                    }
                }
            });


        });
    </script>
}